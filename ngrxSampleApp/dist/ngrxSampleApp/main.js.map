{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/service/dashboard.service.ts","webpack:///./src/app/store/actions/actions.ts","webpack:///./src/app/store/effects/dashboard-effects.ts","webpack:///./src/app/store/reducers/dashboard-reducer.ts","webpack:///./src/app/store/reducers/reducers.ts","webpack:///./src/app/store/state/state-interfaces.ts","webpack:///./src/app/store/state/state.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AACc;AAErE,IAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAG,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAG,MAAM,EAAC;IACpD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,iFAAkB,EAAC;CAC/C,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACb7B,+DAA+D,+H;;;;;;;;;;;ACA/D,sD;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,eAAe,CAAC;IAG1B,CAAC;IAJY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAIxB;IAAD,mBAAC;CAAA;AAJwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAEe;AACT;AACsB;AAC3B;AACW;AACM;AACb;AACuB;AACb;AACX;AAmB7C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAjBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,iFAAkB;aACnB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,2DAAW;gBACX,sEAAgB;gBAChB,uDAAW,CAAC,OAAO,CAAC,iEAAQ,CAAC;gBAC7B,wEAAmB,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;gBAC7C,2DAAa,CAAC,OAAO,CAAC,CAAC,kFAAgB,CAAC,CAAC;aAC1C;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC/BtB,+DAA+D,mJ;;;;;;;;;;;ACA/D,yHAAyH,+DAA+D,eAAe,yDAAyD,oBAAoB,+FAA+F,gBAAgB,YAAY,eAAe,YAAY,gBAAgB,YAAY,gBAAgB,YAAY,gBAAgB,YAAY,gBAAgB,YAAY,gBAAgB,YAAY,gBAAgB,YAAY,eAAe,oBAAoB,EAAE,+FAA+F,eAAe,YAAY,eAAe,YAAY,gBAAgB,YAAY,gBAAgB,YAAY,gBAAgB,YAAY,gBAAgB,YAAY,gBAAgB,YAAY,gBAAgB,YAAY,eAAe,oBAAoB,gBAAgB,EAAE,uBAAuB,KAAK,yKAAyK,aAAa,gC;;;;;;;;;;;;;;;;;;;ACAzoC;AACN;AAGiB;AAW7D;IAEE,4BACU,KAAsC;QAAtC,UAAK,GAAL,KAAK,CAAiC;QAE/C,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,eAAK,IAAI,YAAK,CAAC,IAAI,EAAV,CAAU,CAAC;IAGvD,CAAC;IAED,qCAAQ,GAAR;QACE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,uEAAqB,EAAE,CAAC,CAAC;QACjD,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,mBAAS;YACpC,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;QAC/D,CAAC,CAAC;IACJ,CAAC;IAfU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,+GAAyC;;SAE1C,CAAC;+EAIiB,iDAAK;OAHX,kBAAkB,CAkB9B;IAAD,yBAAC;CAAA;AAlB8B;;;;;;;;;;;;;;;;;;;;ACfY;AACO;AAEb;AAOrC;IAEE,0BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAElC,kCAAO,GAAd;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC,IAAI,CACtD,0DAAG,CAAC,UAAC,GAAQ;YACX,UAAG;QAAH,CAAG,CACJ,CACF,CAAC;IACJ,CAAC;IAVU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG0B,+DAAU;OAFzB,gBAAgB,CAW5B;IAAD,uBAAC;CAAA;AAX4B;;;;;;;;;;;;;ACN7B;AAAA;AAAA;AAAA;AAAA;AAAO,IAAM,UAAU,GAAG,wCAAwC,CAAC;AAC5D,IAAM,kBAAkB,GAAG,gDAAgD,CAAC;AAEnF;IAEI;QADS,SAAI,GAAG,UAAU,CAAC;IACX,CAAC;IACrB,gBAAC;AAAD,CAAC;;AAED;IAEI,0BAAmB,OAAe;QAAf,YAAO,GAAP,OAAO,CAAQ;QADzB,SAAI,GAAG,kBAAkB,CAAC;IAGnC,CAAC;IACL,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACjB+C;AACL;AACa;AACtB;AAEgB;AACmB;AAGrE;IAWI,0BACY,QAAiB,EACjB,gBAAkC;QAF9C,iBAKC;QAJW,aAAQ,GAAR,QAAQ,CAAS;QACjB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAX9C,eAAU,GAAuB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAC/C,4DAAM,CAAC,2DAAsB,CAAC,EAC9B,gEAAS,CAAC,cAAM,YAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,IAAI,CAChD,0DAAG,CAAC,cAAI,IAAI,WAAI,iEAA4B,CAAC,IAAI,CAAC,EAAtC,CAAsC,CAAC,CACtD,EAFe,CAEf,CAAC,CACL,CAAC;IASF,CAAC;IAdD;QADC,4DAAM,EAAE;wEACG,+CAAU;wDAKpB;IAPO,gBAAgB;QAD5B,gEAAU,EAAE;+EAaa,qDAAO;YACC,kFAAgB;OAbrC,gBAAgB,CAiB5B;IAAD,uBAAC;CAAA;AAjB4B;;;;;;;;;;;;;;;;;;;ACT2B;AACN;AAI3C,SAAS,gBAAgB,CAAC,KAAqB,EAAE,MAAuB;IAA9C,gCAAQ,0DAAa;IAClD,QAAQ,MAAM,CAAC,IAAI,EAAE;QACjB,KAAK,mEAA8B,CAAC,CAAC;YAEjC,OAAO,mDACA,KAAK,IACR,SAAS,EAAE,MAAM,CAAC,OAAO,CAAC,SAAS,IACrC;SACL;QAED,OAAO,CAAC,CAAC;YACL,OAAO,KAAK,CAAC;SAChB;KACJ;AACL,CAAC;;;;;;;;;;;;;AClBD;AAAA;AAAA;AAAqD;AAS9C,IAAM,QAAQ,GAAG;IACpB,IAAI,EAAE,mEAAgB;CACzB;;;;;;;;;;;;;ACND;AAAA;AAAA,IAAY,EAGX;AAHD,WAAY,EAAE;IACd,iBAAW;IACX,mBAAa;AACb,CAAC,EAHW,EAAE,KAAF,EAAE,QAGb;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAK4B;AAwBrB,IAAM,aAAa,GAAW;IACjC,SAAS,EAAE;QACP,MAAM,EAAE;YACJ,MAAM,EAAE,KAAK;YACb,OAAO,EAAE,KAAK;YACd,WAAW,EAAE,IAAI;YACjB,MAAM,EAAE,IAAI;SACf;QACD,SAAS,EAAE;YACP,QAAQ,EAAE;gBACN,yBAAyB,EAAE,oDAAE,CAAC,GAAG;gBACjC,kBAAkB,EAAE,EAAE;aACzB;YACD,KAAK,EAAE;gBACH,wBAAwB,EAAE,IAAI;gBAC9B,gBAAgB,EAAE,IAAI;aACzB;SACJ;KACJ;CACJ,CAAC;;;;;;;;;;;;;AChDF;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,MAAM,EAAG,yDAAyD;CACnE,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AChBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nconst routes: Routes = [\n  {path : '', redirectTo :'/home', pathMatch : 'full'},\n  { path: 'home', component: DashboardComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ngrxSampleApp';\n\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { StoreModule } from '@ngrx/store';\nimport { reducers } from './store/reducers/reducers';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { EffectsModule } from '@ngrx/effects';\nimport { UserFetchEffects } from './store/effects/dashboard-effects';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    StoreModule.forRoot(reducers),\n    StoreDevtoolsModule.instrument({ maxAge: 5 }),\n    EffectsModule.forRoot([UserFetchEffects]),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!DOCTYPE HTML>\\n<html>\\n<head>  \\n  <script type=\\\"text/javascript\\\">\\n  window.onload = function () {\\n    var chart = new CanvasJS.Chart(\\\"chartContainer\\\",\\n    {\\n      title:{\\n        text: \\\"A Stacked Area Chart\\\"\\n      \\n      },   \\n      data: [{        \\n        type: \\\"stackedColumn\\\", //or stackedColumn\\n        dataPoints: [\\n        { x: 10, y: 171 },\\n        { x: 20, y: 155},\\n        { x: 30, y: 150 },\\n        { x: 40, y: 165 },\\n        { x: 50, y: 195 },\\n        { x: 60, y: 168 },\\n        { x: 70, y: 128 },\\n        { x: 80, y: 134 },\\n        { x: 90, y: 114}\\n        ]\\n      },{        \\n        type: \\\"stackedColumn\\\", //or stackedColumn\\n        dataPoints: [\\n        { x: 10, y: 29 },\\n        { x: 20, y: 105},\\n        { x: 30, y: 100 },\\n        { x: 40, y: 105 },\\n        { x: 50, y: 105 },\\n        { x: 60, y: 108 },\\n        { x: 70, y: 108 },\\n        { x: 80, y: 104 },\\n        { x: 90, y: 104}\\n        ]\\n      }\\n      ]\\n    });\\n\\n    chart.render();\\n  }\\n  </script>\\n  <script type=\\\"text/javascript\\\" src=\\\"./assets/script/canvasjs.min.js\\\"></script>\\n</head>\\n<body>\\n  <div id=\\\"chartContainer\\\" style=\\\"height: 300px; width: 100%;\\\">\\n  </div>\\n</body>\\n</html>\"","import { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { IState } from '../store/state/state';\nimport { Observable } from 'rxjs';\nimport * as fetchAction from 'src/app/store/actions/actions';\nimport * as fromRoot from 'src/app/store/reducers/reducers'\n\n\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  dashboardData: Observable<IState>;\n  constructor(\n    private store: Store<fromRoot.IDashboardState>\n  ) {\n   this.dashboardData = store.select(state => state.data)\n \n\n  }\n\n  ngOnInit() {\n    this.store.dispatch(new fetchAction.FetchData());\n    this.dashboardData.subscribe(container =>{\n      console.log(\"Container printing\", JSON.stringify(container));\n    })\n  }\n\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {  IState } from '../store/state/state';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n\n  constructor(private http: HttpClient) { }\n\n  public getData(): Observable<IState> {\n    return this.http.get('./assets/dashboardData.json').pipe(\n      map((res: any) =>\n        res\n      )\n    );\n  }\n}\n","\r\nimport {  IState } from '../state/state'\r\nimport { Action } from '@ngrx/store/src/models';\r\n\r\nexport const FETCH_DATA = '[UserProfileData] fetch dashboard data';\r\nexport const FETCH_DATA_SUCCESS = '[UserProfileData] fetch dashboard data success';\r\n\r\nexport class FetchData implements Action {\r\n    readonly type = FETCH_DATA;\r\n    constructor() { }\r\n}\r\n\r\nexport class FetchDataSuccess implements Action {\r\n    readonly type = FETCH_DATA_SUCCESS;\r\n    constructor(public payload: IState) {\r\n\r\n    }\r\n}\r\n\r\nexport type All\r\n    = FetchData | FetchDataSuccess;\r\n","import { map, switchMap } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { Effect, Actions, ofType } from '@ngrx/effects';\r\nimport { Observable } from 'rxjs';\r\nimport { Action } from '@ngrx/store';\r\nimport * as fetchAction from '../actions/actions';\r\nimport { DashboardService } from 'src/app/service/dashboard.service';\r\n\r\n@Injectable()\r\nexport class UserFetchEffects {\r\n    @Effect()\r\n    dashboard$: Observable<Action> = this.actions$.pipe(\r\n        ofType(fetchAction.FETCH_DATA),\r\n        switchMap(() => this.dashboardService.getData().pipe(\r\n            map(data => new fetchAction.FetchDataSuccess(data))\r\n        )),\r\n    );\r\n\r\n\r\n\r\n    constructor(\r\n        private actions$: Actions,\r\n        private dashboardService: DashboardService\r\n    ) {\r\n\r\n    }\r\n}","import {  IState, INITIAL_STATE } from '../state/state';\r\nimport * as FetchAction from '../actions/actions';\r\n\r\n\r\n\r\nexport function dashboardReducer(state = INITIAL_STATE, action: FetchAction.All): IState {\r\n    switch (action.type) {\r\n        case FetchAction.FETCH_DATA_SUCCESS: {\r\n          \r\n            return {\r\n                ...state,\r\n                container: action.payload.container\r\n            };\r\n        }\r\n\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n","\r\nimport { dashboardReducer} from './dashboard-reducer'\r\nimport { IState} from '../state/state'\r\n\r\n\r\n\r\nexport interface IDashboardState {\r\n    data: IState;\r\n}\r\n\r\nexport const reducers = {\r\n    data: dashboardReducer\r\n}\r\n\r\n","\r\nexport type RevenuTableSelectionItem =\r\n| IRevenueSummaryItem\r\n| ITopTenBacklogItem\r\n| ITopTenOpportunityItem;\r\n\r\nexport enum BU {\r\nRTI = 'RTI',\r\nSSES = 'SSES'\r\n}\r\n\r\nexport type BusinessUnitLevel =\r\n| 'RTI'\r\n| 'SSES'\r\n| 'SPHERE'\r\n| 'SCSS'\r\n| 'EHS'\r\n| 'EWD'\r\n| 'FOOD&AG'\r\n| 'GED'\r\n| 'GLOBALHEALTH'\r\n| 'INTLED'\r\n| 'LEED'\r\n| 'DS'\r\n| 'LEED'\r\n| 'IA'\r\n| 'OTHER';\r\n\r\nexport interface IForcastItem {\r\nfiscalYear: string;\r\nactual: number;\r\ngap: number;\r\nbacklog: number;\r\npipeline: number;\r\n}\r\n\r\nexport interface IRevenueSummaryItem {\r\nfiscalYear: string;\r\nbusinessUnit: BusinessUnitLevel;\r\ncategoryLabel: string;\r\nactuals: number;\r\nbacklog: number;\r\npipeline: number;\r\nrevenue: number;\r\ngap: number;\r\ntarget: number;\r\nconfidenceInterval: number;\r\npredictedTarget: number;\r\n}\r\n\r\nexport interface ITopTenOpportunityItem {\r\nfiscalYear: string;\r\nopportunityID: string;\r\nname: string;\r\nbusinessUnit: BusinessUnitLevel;\r\nopportunityAmount: number;\r\nwinProbability: number;\r\nbidProbability: number;\r\nforecastAmount: number;\r\nsandboxAmount: number;\r\nsandboxState: boolean | null;\r\n}\r\n\r\nexport interface ITopTenBacklogItem {\r\nfiscalYear: string[];\r\nprojectNumber: number;\r\nname: string;\r\nbusinessUnit: BusinessUnitLevel;\r\n}\r\n","import {\r\n    BusinessUnitLevel,\r\n    IForcastItem,\r\n    RevenuTableSelectionItem,\r\n    BU\r\n} from './state-interfaces';\r\n\r\nexport interface IState {\r\n    container: {\r\n        layout?: {\r\n            loading: boolean,\r\n            loaded: boolean,\r\n            error?: any,\r\n            displayMode?: any,\r\n            resize?: boolean | null;\r\n        };\r\n        dashboard?: {\r\n            forecast?: {\r\n                selectedBusinessUnitLevel: BusinessUnitLevel,\r\n                forecastGraphItems: IForcastItem[],\r\n            };\r\n            table?: {\r\n                selectedRevenueTableItem: 'SUMMARY' | 'OPPORTUNITY' | 'BACKLOG';\r\n                revenueTableItem: RevenuTableSelectionItem\r\n            }\r\n        };\r\n    };\r\n}\r\n\r\nexport const INITIAL_STATE: IState = {\r\n    container: {\r\n        layout: {\r\n            loaded: false,\r\n            loading: false,\r\n            displayMode: null,\r\n            resize: null\r\n        },\r\n        dashboard: {\r\n            forecast: {\r\n                selectedBusinessUnitLevel: BU.RTI,\r\n                forecastGraphItems: [],\r\n            },\r\n            table: {\r\n                selectedRevenueTableItem: null,\r\n                revenueTableItem: null\r\n            }\r\n        }\r\n    }\r\n};\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl : \"https://randomuser.me/api/?results=5&exc=login&seed=rti\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}